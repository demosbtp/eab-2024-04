name: Create a new project via Terraform

on:
  workflow_dispatch:

jobs:
  execute_infra_setup:
    name: Project Setup
    runs-on: ubuntu-latest
    env: 
      PATH_TO_TFSCRIPT_SA: 'infra/setup_dev_account'
      PATH_TO_TFSCRIPT_CF: 'infra/setup_cf_spaces'
      MTA_PATH: ''
      CF_API_DETAILS: ''
    steps:
    - name: Check out Git repository
      id: checkout_repo
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      id : setup_terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false
        terraform_version: latest
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20    

    - name: Install npm dependencies
      id: install_node_dependencies
      run: |
        cd .github/scripts
        npm ci

    - name: "Create tfvars file for services"
      id: create_service_tfvars
      run: |
        cd .github/scripts
        export PATH_TO_TFSCRIPT=${{ env.PATH_TO_TFSCRIPT_SA }} 
        export MTA_PATH=$(find . -type f -name 'mta.yaml' | sed -e 's,^\./,,')
        npm run build:servicetfvars
  
    - name: Terraform Init for Subaccount
      id: terraform_init_sa
      shell: bash
      run: |
        terraform -chdir=${{ env.PATH_TO_TFSCRIPT_SA }} init -no-color

    - name: Terraform Init for Subaccount
      shell: bash
      run: |
        less '${{ env.PATH_TO_TFSCRIPT_SA }}/serviceentitlements.tfvars'    
    
    - name: Terraform Apply Subaccount Setup
      id: terraform_apply_sa
      shell: bash
      # We do not store the state - in a real setup we would reference a remote backend to store the state
      run: |
        export BTP_USERNAME=${{ secrets.BTP_USERNAME }}
        export BTP_PASSWORD=${{ secrets.BTP_PASSWORD }}
        terraform -chdir='${{ env.PATH_TO_TFSCRIPT_SA }}' apply -auto-approve -no-color -var globalaccount='${{ secrets.GLOBALACCOUNT }}' -var subaccount_name='EAB 2024 04' -var admins='["christian.lechner@sap.com"]' -var-file='serviceentitlements.tfvars'
        echo "CF_API_DETAILS=$(terraform output -json -no-color cf_details)" >> "$GITHUB_ENV"
    
    #- name: Terraform Setup for Cloud Foundry
    #  id: terraform_setup_cf
    #  shell: bash
    #  run: |
    #    export CF_USER=${{ secrets.BTP_USERNAME }}
    #    export CF_PASSWORD=${{ secrets.BTP_PASSWORD }}
    #    export CF_API_DETAILS=${{ env.CF_API_DETAILS }}
    #    SHELL SCRIPT - LOOP NEEEDED
    # 
    #    export CF_API_URL=$(echo $CF_API_DETAILS | jq -r '.api_url')  
    #    terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} init -no-color \ 
    #    terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} apply -auto-approve -no-color\
    #     -var globalaccount=${{ secrets.GLOBALACCOUNT }} \
    #     -var-file='serviceentitlements.tfvars' \
    #        