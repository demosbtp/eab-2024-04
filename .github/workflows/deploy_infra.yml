name: Create a new project via Terraform

on:
  workflow_dispatch:
    inputs:
      REGION:
        description: 'The region where the project should be created'
        required: true
        default: 'us10'
  workflow_call:
    inputs:
      REGION:
        required: true
        type: string
        default: 'us10'

jobs:
  execute_infra_setup:
    name: Project Setup
    runs-on: ubuntu-latest
    env: 
      PATH_TO_TFSCRIPT_SA: 'infra/setup_dev_account'
      PATH_TO_TFSCRIPT_CF: 'infra/setup_cf_spaces'
      MTAR_PATH: './src/gen'
      MTAR_FILE: 'cap-app.mtar'
      MTA_PATH: ''
      CF_ORG_ID: ''
      CF_ORG_NAME: ''
      CF_API_URL: ''
      CF_SPACE_NAME: 'dev'
    steps:

    - name: Check out Git repository
      id: checkout_repo
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      id : setup_terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false
        terraform_version: latest
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20    

    - name: Install npm dependencies
      id: install_node_dependencies
      run: |
        cd .github/scripts
        npm ci

    - name: Install Tools
      id: install_tools
      run: |
        npm install --global @sap/cds-dk
        cds --version
        npm install -g mbt

    - name: Build CAP app
      id: build_cap_app
      run: |
        cd src/
        npm install
        cds add xsuaa
        cds build
        mbt build -t=gen --mtar ${{ env.MTAR_FILE }}
  
    - name: Create tfvars file for services
      id: create_service_tfvars
      run: |
        cd .github/scripts
        export PATH_TO_TFSCRIPT=${{ env.PATH_TO_TFSCRIPT_SA }} 
        export MTA_PATH=$(find . -type f -name 'mta.yaml' | sed -e 's,^\./,,')
        npm run build:servicetfvars
  
    - name: Terraform Init for Subaccount
      id: terraform_init_sa
      shell: bash
      run: |
        terraform -chdir=${{ env.PATH_TO_TFSCRIPT_SA }} init -no-color
    
    - name: Terraform Apply Subaccount Setup
      id: terraform_apply_sa
      shell: bash
      # We do not store the Terraform state - in a real setup we would reference a remote backend
      run: |
        export BTP_USERNAME=${{ secrets.BTP_USERNAME }}
        export BTP_PASSWORD=${{ secrets.BTP_PASSWORD }}
        terraform -chdir='${{ env.PATH_TO_TFSCRIPT_SA }}' apply -auto-approve -no-color -var globalaccount='${{ secrets.GLOBALACCOUNT }}' -var region='${{ inputs.REGION }}' -var subaccount_name='EAB 2024 04' -var-file='serviceentitlements.tfvars'
        echo "CF_ORG_ID=$(terraform -chdir='${{ env.PATH_TO_TFSCRIPT_SA }}' output -raw -no-color cf_org_id)" >> "$GITHUB_ENV"
        echo "CF_ORG_NAME=$(terraform -chdir='${{ env.PATH_TO_TFSCRIPT_SA }}' output -raw -no-color cf_org_name)" >> "$GITHUB_ENV"
        echo "CF_API_URL=$(terraform -chdir='${{ env.PATH_TO_TFSCRIPT_SA }}' output -raw -no-color cf_api_endpoint)" >> "$GITHUB_ENV"
    
    - name: Assign CF users
      id: assign_cf_users
      uses: ./.github/actions/sap-btp-cf
      with:
        cf_api: ${{ env.CF_API_URL }}
        cf_username: ${{ secrets.BTP_USERNAME }}
        cf_password: ${{ secrets.BTP_PASSWORD }}
        cf_org: ${{ env.CF_ORG_NAME }}
        cf_space: ${{ env.CF_SPACE_NAME }}
        command: |
          cf8 set-org-role rui.nogueira@sap.com ${{ env.CF_ORG_NAME }} OrgManager \
          && cf8 set-org-role christian.lechner@sap.com ${{ env.CF_ORG_NAME }} OrgManager --origin sap.default\
          && cf8 set-space-role rui.nogueira@sap.com ${{ env.CF_ORG_NAME }} ${{ env.CF_SPACE_NAME }} SpaceManager \
          && cf8 set-space-role rui.nogueira@sap.com ${{ env.CF_ORG_NAME }} ${{ env.CF_SPACE_NAME }} SpaceDeveloper \
          && cf8 set-space-role christian.lechner@sap.com ${{ env.CF_ORG_NAME }} ${{ env.CF_SPACE_NAME }} SpaceManager  --origin sap.default\
          && cf8 set-space-role christian.lechner@sap.com ${{ env.CF_ORG_NAME }} ${{ env.CF_SPACE_NAME }} SpaceDeveloper  --origin sap.default

    - name: Terraform Init for Cloud Foundry Space
      id: terraform_init_cf
      shell: bash
      run: |
        terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} init -no-color

    - name: Terraform Apply Cloud Foundry Space Setup
      id: terraform_setup_cf
      shell: bash
      run: |
        export CF_USER=${{ secrets.BTP_USERNAME }}
        export CF_PASSWORD=${{ secrets.BTP_PASSWORD }}
        export CF_API_URL=${{ env.CF_API_URL }}
        terraform -chdir='${{ env.PATH_TO_TFSCRIPT_CF }}' apply -auto-approve -no-color -var cf_org_id='${{ env.CF_ORG_ID }}' -var cf_space_name='${{ env.CF_SPACE_NAME }}'
    
    - name: Deploy MTAR
      id: deploy_mtar
      uses: ./.github/actions/sap-btp-cf
      with:
        cf_api: ${{ env.CF_API_URL }}
        cf_username: ${{ secrets.BTP_USERNAME }}
        cf_password: ${{ secrets.BTP_PASSWORD }}
        cf_org: ${{ env.CF_ORG_NAME }}
        cf_space: ${{ env.CF_SPACE_NAME }}
        command: |
          cf8 install-plugin -f multiapps \
          && cf8 deploy ${{ env.MTAR_PATH }}/${{ env.MTAR_FILE }} -f
